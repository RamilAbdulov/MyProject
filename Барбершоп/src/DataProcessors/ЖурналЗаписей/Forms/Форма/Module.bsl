
#Область ОбработчикиСобытийФормы	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДата();
	Салон = Справочники.Салоны.ОсновнойСалон();
	ОбновитьПериодОтображенияПланировщика();
	СоздатьИзмеренияПланировщика(); 
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Изменение_Запись" Тогда
		ЗаполнитьЖурналЗаписей();	
	КонецЕсли;
КонецПроцедуры



#КонецОбласти                   



#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей()
КонецПроцедуры

&НаКлиенте
Процедура СалонПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей()
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = Новый Структура;
	
	ЗначенияЗаполнения.Вставить("Салоны",Салон);
	ЗначенияЗаполнения.Вставить("Дата",Начало);
	ЗначенияЗаполнения.Вставить("ДатаОкончания",Конец);
	ЗначенияЗаполнения.Вставить("Сотрудник",ЗначенияИзмерений["Сотрудник"]);
	
	СтруктураПараметров  = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.Записи.ФормаОбъекта", СтруктураПараметров,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	
	ЭлементПланировщика = ВыделенныеЭлементы[0]; 
	
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение);
	ОткрытьФорму("Документ.Записи.ФормаОбъекта",СтруктураПараметров);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	
	ЭлементПланировщика = ВыделенныеЭлементы[0];
	
	ЗначенияРеквизитов = Новый Структура;
	
	ЗначенияРеквизитов.Вставить("Салоны",Салон);
	ЗначенияРеквизитов.Вставить("Дата",ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ДатаОкончания",ЭлементПланировщика.Конец);
	ЗначенияРеквизитов.Вставить("Сотрудник",ЭлементПланировщика.ЗначенияИзмерений["Сотрудник"]);
	
	
	ОбновитьДанныеЗаписи(ЭлементПланировщика.Значение,ЗначенияРеквизитов)
	
	
КонецПроцедуры  


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()
	Начало = НачалоДня(Дата) + 9 * 60 * 60;
	Конец  = НачалоДня(Дата) + 19 * 60 * 60;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало,Конец);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИзмеренияПланировщика()
	Измерение = Планировщик.Измерения.Добавить("Сотрудник");
	
	Выборка = Справочники.Сотрудники.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
		
		ЗначениеИзмерения.Текст = Выборка.Наименование + Символы.ПС + Выборка.Должность;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.Синий;
		
	КонецЦикла;
	
КонецПроцедуры   

&НаСервере
Процедура ОбновитьПериодОтображения()
	Начало = НачалоДня(Дата) + 9 * 3600;
	Конец  = КонецДня(Дата) + 9 * 3600;   
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало,Конец);
	
КонецПроцедуры   

&НаСервере
Процедура ЗаполнитьЖурналЗаписей()
	
	Планировщик.Элементы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Записи.Дата КАК Дата,
	|	Записи.Салоны КАК Салоны,
	|	Записи.Сотрудник КАК Сотрудник,
	|	Записи.Длительность КАК Длительность,
	|	ПРЕДСТАВЛЕНИЕ(Записи.Услуга) КАК Услуга,
	|	Записи.Сумма КАК Сумма,
	|	Записи.ДатаОкончания КАК ДатаОкончания,
	|	Записи.Комментарий КАК Комментарий,
	|	Записи.Ссылка КАК Ссылка,
	|	Записи.Клиент.Телефон КАК Телефон,
	|	Записи.Клиент КАК Клиент,
	|	Записи.Цвет КАК Цвет
	|ИЗ
	|	Документ.Записи КАК Записи
	|ГДЕ
	|	Записи.Проведен
	|	И Записи.Салоны = &Салон
	|	И Записи.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания"; 
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	Запрос.УстановитьПараметр("Салон", Салон);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ЗначениеИзмерений = Новый Соответствие;
			ЗначениеИзмерений.Вставить("Сотрудник",Выборка.Сотрудник);
			
			ЖирныйШрифт = Новый Шрифт(,,Истина);
			
			МассивСтрок = Новый Массив;
			ПредставлениеКлиента  = Строка(выборка.Клиент) + ", " + Выборка.Телефон;
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиента,ЖирныйШрифт));
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Выборка.Услуга);
			МассивСтрок.Добавить(Символы.ПС); 
			Если ЗначениеЗаполнено(Выборка.Комментарий) Тогда
				МассивСтрок.Добавить("--" + Выборка.Комментарий);
			КонецЕсли;
			
			ТекстЭлемента = Новый ФорматированнаяСтрока(МассивСтрок);
			
			ЭлементПланировщика = Планировщик.Элементы.Добавить(Выборка.Дата, выборка.ДатаОкончания);
			ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(ЗначениеИзмерений);
			ЭлементПланировщика.Значение = Выборка.Ссылка;
			ЭлементПланировщика.Текст = ТекстЭлемента;  
			Цвет = Выборка.Цвет.Получить();
			Если Цвет = Неопределено Тогда
				ЭлементПланировщика.ЦветФона = WebЦвета.БледноЛиловый; 	
			Иначе
				ЭлементПланировщика.ЦветФона = Цвет;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьДиаграмму();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДиаграмму()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДеньгиОбороты.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДеньгиОбороты.СуммаПриход КАК СуммаПриход
	|ИЗ
	|	РегистрНакопления.Деньги.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ДеньгиОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();
	Диаграмма.АвтоТранспонирование = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Точка = Диаграмма.Точки.Добавить("");
	
	Пока Выборка.Следующий() Цикл
		Серия = Диаграмма.Серии.Добавить(Строка(ВЫборка.ТипДенежныхСредств));			
		Диаграмма.УстановитьЗначение(Точка,Серия,Выборка.СуммаПриход);
	КонецЦикла;
	
	Диаграмма.АвтоТранспонирование = Истина;
	Диаграмма.Обновление = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьДанныеЗаписи(Запись,ЗначенияРеквизитов)
	
	ОбъектЗаписи = Запись.ПолучитьОбъект();
	
	ЕстьИзменения = Ложь;
	Для каждого Реквизит из ЗначенияРеквизитов Цикл
		Если ОбъектЗаписи[Реквизит.Ключ] <> Реквизит.Значение Тогда
			ЕстьИзменения = Истина;
			Прервать;	
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		ЗаполнитьЗначенияСвойств(ОбъектЗаписи,ЗначенияРеквизитов);
		Длительность = (ОбъектЗаписи.ДатаОкончания - ОбъектЗаписи.Дата)/60;
		ОбъектЗаписи.Длительность = Длительность;
		
		ОбъектЗаписи.Записать();
	КонецЕсли;                                                    
	
КонецПроцедуры

#КонецОбласти

